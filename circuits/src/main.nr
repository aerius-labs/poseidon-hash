mod poseidon;

fn main(input : Field) -> pub Field {
    let hash = poseidon::digest(input);
    hash
}

#[test]
fn test() {
    let inp1 = 1;
    constrain main(inp1) == 18586133768512220936620570745912940619677854269274689475585506675881198879027;
    let inp2 = 6510111410511711532769798115;
    constrain main(inp2) == 2225086410551504226100885281417887039055692277354783275125045648374243118629;
    let inp3 = 9209543541980550723094445704517255755071743735731512908809556594306011408714;
    constrain main(inp3) == 14699005113217709255156869750696881355946450884360437057757784438581536386039;
    let inp4 = 694661225370450055519871009313104901120829629142962076471765877525320609152;
    constrain main(inp4) == 19397801442145757817988454180062076424538073213279036412564289236865682297704;
}